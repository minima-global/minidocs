"use strict";(self.webpackChunkminima_docs=self.webpackChunkminima_docs||[]).push([[4168],{3905:(e,t,n)=>{n.d(t,{Zo:()=>h,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},h=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),m=c(n),p=r,d=m["".concat(l,".").concat(p)]||m[p]||u[p]||i;return n?a.createElement(d,o(o({ref:t},h),{},{components:n})):a.createElement(d,o({ref:t},h))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},991:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:13},o="Block Size",s={unversionedId:"learn/minimawhitepaper/blocksize",id:"learn/minimawhitepaper/blocksize",title:"Block Size",description:"Blocks in Minima are small. As small as a transaction. All transactions are potential blocks. Blocks are just lucky transactions. Blocks only contain references to transactions (Compact blocks in Bitcoin), that have already been sent across the network, rather than the entire transaction. Minima also uses an adaptive block size. The maximum size is set by the chain as twice the average block size of the last n blocks. This allows the users themselves to determine the block size. By filling their blocks higher than the average they will make the maximum size greater, by filling them lower, the maximum will be made lower. Users can drag the maximum block size up or down depending on whether they need it, or whether enough traffic is going Lightning[3] and beyond.",source:"@site/docs/learn/minimawhitepaper/blocksize.md",sourceDirName:"learn/minimawhitepaper",slug:"/learn/minimawhitepaper/blocksize",permalink:"/docs/learn/minimawhitepaper/blocksize",draft:!1,editUrl:"https://github.com/minima-global/minidocs/docs/learn/minimawhitepaper/blocksize.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Quantum Secure",permalink:"/docs/learn/minimawhitepaper/quantumsecure"},next:{title:"Block Speed",permalink:"/docs/learn/minimawhitepaper/blockspeed"}},l={},c=[],h={toc:c},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"block-size"},"Block Size"),(0,r.kt)("p",null,"Blocks in Minima are small. As small as a transaction. All transactions are potential blocks. Blocks are just lucky transactions. Blocks only contain references to transactions (Compact blocks in Bitcoin), that have already been sent across the network, rather than the entire transaction. Minima also uses an adaptive block size. The maximum size is set by the chain as twice the average block size of the last n blocks. This allows the users themselves to determine the block size. By filling their blocks higher than the average they will make the maximum size greater, by filling them lower, the maximum will be made lower. Users can drag the maximum block size up or down depending on whether they need it, or whether enough traffic is going Lightning",(0,r.kt)("a",{parentName:"p",href:"/docs/learn/minimawhitepaper/specialthanksto"},"[3]")," and beyond."),(0,r.kt)("p",null,"On a miner-centric chain, blocks must be full. If blocks are not full, there is no fee market for block space, and no requirement to pay any fees at all. If there are no fees there is no security, as the fees pay the miners and the miners secure the chain. Empty blocks are no good, half-full blocks are no good, only full blocks work. Block size must be restricted in some way to ensure this is the case."),(0,r.kt)("p",null,"On a user-centric chain, blocks can be empty, half full, or full, with no effect on the security of the chain. The security is determined by the total PoW generated by all the users. There are no 'fees' required to pay miners to secure the network. There is no requirement to restrict block size, as long as the overall network can handle the on-chain transaction per second rate. The 'Burn' acts as congestion control, to limit traffic at times of heavy load. Each user can determine the load they face independently on their local device and use that knowledge to build a block with a manageable size. "),(0,r.kt)("p",null,"Minima uses a Cascading Chain that aggressively prunes almost all data, whilst keeping a record of total cumulative PoW and the complete MMR Database, so blocks are not an ongoing storage overhead but only a short-term bandwidth and processing concern."))}u.isMDXComponent=!0}}]);