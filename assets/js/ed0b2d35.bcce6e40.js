"use strict";(self.webpackChunkminima_docs=self.webpackChunkminima_docs||[]).push([[7047],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=u(n),c=r,h=m["".concat(s,".").concat(c)]||m[c]||p[c]||o;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),r=n(6010);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,i),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(7462),r=n(7294),o=n(6010),i=n(2466),l=n(6550),s=n(1980),u=n(7392),d=n(12);function m(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??m(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function c(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function k(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=p(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[s,u]=h({queryString:n,groupId:a}),[m,k]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,d.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),g=(()=>{const e=s??m;return c({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!c({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),k(e)}),[u,k,o]),tabValues:o}}var g=n(2389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:u}=e;const d=[],{blockElementScrollPositionUntilNextRender:m}=(0,i.o5)(),p=e=>{const t=e.currentTarget,n=d.indexOf(t),a=u[n].value;a!==l&&(m(t),s(a))},c=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;t=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;t=d[n]??d[d.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>d.push(e),onKeyDown:c,onClick:p},i,{className:(0,o.Z)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":l===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function y(e){const t=k(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",f.tabList)},r.createElement(b,(0,a.Z)({},e,t)),r.createElement(v,(0,a.Z)({},e,t)))}function w(e){const t=(0,g.Z)();return r.createElement(y,(0,a.Z)({key:String(t)},e))}},8779:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>u,toc:()=>m});var a=n(7462),r=(n(7294),n(3905)),o=n(4866),i=n(5162);const l={sidebar_position:6},s="Run a Mega node (NEW)",u={unversionedId:"runanode/meganode",id:"runanode/meganode",title:"Run a Mega node (NEW)",description:"A Mega node is similar to an Archive node in that that it can recover any Minima user that has lost access to their node or requires a re-sync to the chain.",source:"@site/docs/runanode/meganode.md",sourceDirName:"runanode",slug:"/runanode/meganode",permalink:"/docs/runanode/meganode",draft:!1,editUrl:"https://github.com/minima-global/minidocs/docs/runanode/meganode.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Run an Archive node",permalink:"/docs/runanode/archivenodes"},next:{title:"Host a Public Wallet (NEW)",permalink:"/docs/runanode/publicwallet"}},d={},m=[{value:"What does it do?",id:"what-does-it-do",level:2},{value:"Use cases",id:"use-cases",level:3},{value:"Personal Mega Node",id:"personal-mega-node",level:4},{value:"Public Mega Node (server based)",id:"public-mega-node-server-based",level:4},{value:"System requirements",id:"system-requirements",level:2},{value:"Ports",id:"ports",level:3},{value:"How to start a Mega node",id:"how-to-start-a-mega-node",level:2},{value:"1. Start (or update) a node",id:"1-start-or-update-a-node",level:3},{value:"Docker - Linux VPS",id:"docker---linux-vps",level:4},{value:"Docker desktop - Windows",id:"docker-desktop---windows",level:4},{value:"Docker desktop - Mac/Linux",id:"docker-desktop---maclinux",level:4},{value:"2. Join the network",id:"2-join-the-network",level:3},{value:"3. Chain sync or import historical data",id:"3-chain-sync-or-import-historical-data",level:3},{value:"Additional help",id:"additional-help",level:2}],p={toc:m},c="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"run-a-mega-node-new"},"Run a Mega node (NEW)"),(0,r.kt)("p",null,"A Mega node is similar to an Archive node in that that it can recover any Minima user that has lost access to their node or requires a re-sync to the chain."),(0,r.kt)("p",null,"A Mega node does ",(0,r.kt)("strong",{parentName:"p"},"not")," also have to be an archive node although the two can be run together on the same node. "),(0,r.kt)("h2",{id:"what-does-it-do"},"What does it do?"),(0,r.kt)("p",null,"A Mega node stores ",(0,r.kt)("strong",{parentName:"p"},"all unspent")," coins with their proofs, this differs to a standard node which only stores the coins (and proofs) that are relevant to the user. "),(0,r.kt)("p",null,"A Mega node can:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Re-sync another Minima node to the correct top block"),(0,r.kt)("li",{parentName:"ol"},"Restore another Minima node from a seed phrase"),(0,r.kt)("li",{parentName:"ol"},"Restore another Minima node from a backup (.bak file) no matter how old the backup is")),(0,r.kt)("p",null,"The Mega node ",(0,r.kt)("strong",{parentName:"p"},"is not able")," to spend the coins it stores as it does not have the owner's private keys. "),(0,r.kt)("p",null,"The Mega node ",(0,r.kt)("strong",{parentName:"p"},"does not")," get access to the recovering user's seed phrase or backup file at any point."),(0,r.kt)("h3",{id:"use-cases"},"Use cases"),(0,r.kt)("p",null,"Mega nodes can be for personal use or public use."),(0,r.kt)("h4",{id:"personal-mega-node"},"Personal Mega Node"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Purpose:")," Personal recovery without relying on any third party"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"For example, if you run a node on a mobile device, you can run a separate Mega node on your laptop/desktop at home in case you lose your phone. In this situation, you could restore your mobile node from your Mega MMR node by using the seed phrase or a backup taken from the mobile node.\nTo recover a node from your personal Mega node, both nodes must be on the same WiFi and you will need the local IP address of the Mega node.")),(0,r.kt)("h4",{id:"public-mega-node-server-based"},"Public Mega Node (server based)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Purpose:")," To assist other users in recovering their node"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"By running a Mega node on a server with a static public IP address, other users can use the ip:port of your Mega node to recover their node remotely.")," "),(0,r.kt)("h2",{id:"system-requirements"},"System requirements"),(0,r.kt)("p",null,"The following requirements are separate to any specs required for non Minima related processes."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Processing:")," 2 CPU ",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"Memory:")," 8GB RAM",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"Storage:")," 5GB"),(0,r.kt)("p",null,"We do not recommend running a Mega node from an Android device as the RAM consumption is considerably higher than a standard node."),(0,r.kt)("p",null,"The Mega node ",(0,r.kt)("strong",{parentName:"p"},"must be online")," constantly to remain in sync with the chain. Downtime of less than 24 hours is acceptable."),(0,r.kt)("h3",{id:"ports"},"Ports"),(0,r.kt)("p",null,"If running a Mega node on a desktop for personal use, no port forwarding is required."),(0,r.kt)("p",null,"If running a Mega node on a server for public use, open inbound/outbound connections on port 9001 (or the main custom Minima port you have chosen). "),(0,r.kt)("h2",{id:"how-to-start-a-mega-node"},"How to start a Mega node"),(0,r.kt)("admonition",{title:"Changing from Standard to Mega node",type:"important"},(0,r.kt)("p",{parentName:"admonition"},"If you have an existing node that you wish to change to a Mega node, first take a backup of your existing node, then stop the node, add the ",(0,r.kt)("inlineCode",{parentName:"p"},"-megammr")," start up parameter and restart the node."),(0,r.kt)("p",{parentName:"admonition"},"If you used the ",(0,r.kt)("inlineCode",{parentName:"p"},"-data")," parameter to specify a data folder when starting your existing node, make sure you start the Mega node using the same data folder you chose originally.")),(0,r.kt)("h3",{id:"1-start-or-update-a-node"},"1. Start (or update) a node"),(0,r.kt)("p",null,"Start (or update) a node in the same way as as a normal node, adding the ",(0,r.kt)("inlineCode",{parentName:"p"},"-megammr")," startup parameter. See examples below."),(0,r.kt)(o.Z,{defaultValue:"cli",values:[{label:"Command Line",value:"cli"},{label:"JNLP (Windows/Mac)",value:"jnlp"},{label:"Docker",value:"docker"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"cli",mdxType:"TabItem"},(0,r.kt)("p",null,"Start a node as per the Run a Node section for ",(0,r.kt)("a",{parentName:"p",href:"/docs/runanode/selectplatform/manualnode"},"desktop command line")," or ",(0,r.kt)("a",{parentName:"p",href:"/docs/runanode/selectplatform/linuxvpsservice"},"Linux VPS"),"."),(0,r.kt)("p",null,"When providing the start up parameters, include ",(0,r.kt)("inlineCode",{parentName:"p"},"-megammr")," as shown below"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"java -jar [path to minima.jar] -mdsenable -mdspassword YOURSECUREPASSWORD -megammr\n"))),(0,r.kt)(i.Z,{value:"jnlp",mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Start a node as per the Run a Node section for ",(0,r.kt)("a",{parentName:"li",href:"/docs/runanode/selectplatform/windows"},"Windows")," or ",(0,r.kt)("a",{parentName:"li",href:"/docs/runanode/selectplatform/mac"},"Mac"),"."),(0,r.kt)("li",{parentName:"ol"},"Once running, on the Settings tab, under ",(0,r.kt)("strong",{parentName:"li"},"Advanced Params"),', tick the "Use custom parameters" box'),(0,r.kt)("li",{parentName:"ol"},"Enter ",(0,r.kt)("inlineCode",{parentName:"li"},"-megammr")),(0,r.kt)("li",{parentName:"ol"},"Close the window and restart the node by relaunching the JNLP"))),(0,r.kt)(i.Z,{value:"docker",mdxType:"TabItem"},(0,r.kt)("p",null,"Start a node as per the Run a Node section for ",(0,r.kt)("a",{parentName:"p",href:"/docs/runanode/selectplatform/dockerdesktop"},"Docker desktop")," or ",(0,r.kt)("a",{parentName:"p",href:"/docs/runanode/selectplatform/linux_vps"},"Linux VPS (Docker)"),". However, when starting the container, add the following environment variable to the start up command:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"-e minima_megammr=true")),(0,r.kt)("p",null,"If you already have other Minima containers running, you can start a separate Mega node by changing the port "),(0,r.kt)("p",null,"e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"-p 6001-6003:9001-9003")),(0,r.kt)("h4",{id:"docker---linux-vps"},"Docker - Linux VPS"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run -d -e minima_mdspassword=INSERTPASSWORD -e minima_server=true -e minima_megammr=true -v ~/megaminimadocker:/home/minima/data -p 9001-9003:9001-9003 --restart unless-stopped --name megaminima minimaglobal/minima:latest\n")),(0,r.kt)("h4",{id:"docker-desktop---windows"},"Docker desktop - Windows"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run -d -e minima_mdspassword=INSERTPASSWORD -e minima_desktop=true -e minima_megammr=true -v C:\\Users\\INSERTUSERNAME\\megaminimadocker:/home/minima/data -p 9001-9003:9001-9003 --restart unless-stopped --name megaminima minimaglobal/minima:latest\n")),(0,r.kt)("h4",{id:"docker-desktop---maclinux"},"Docker desktop - Mac/Linux"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run -d -e minima_mdspassword=INSERTPASSWORD -e minima_desktop=true -e minima_megammr=true -v ~/megaminimadocker:/home/minima/data -p 9001-9003:9001-9003 --restart unless-stopped --name megaminima minimaglobal/minima:latest\n")))),(0,r.kt)("h3",{id:"2-join-the-network"},"2. Join the network"),(0,r.kt)("p",null,"Once the node is running, you will need to join the Peer-to-Peer network, enter the following command from the Minima terminal/RPC client:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"peers action:addpeers peerslist:https://spartacusrex.com/minimapeers.txt")),(0,r.kt)("p",null,"Alternatively use your own list of peers."),(0,r.kt)("p",null,"You should see the response below, wait a few moments to receive the initial blockchain download."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "command":"peers",\n  "params":{\n    "action":"addpeers",\n    "peerslist":"https://spartacusrex.com/minimapeers.txt"\n  },\n  "status":true,\n  "pending":false,\n  "response":{\n    "message":"Peers added to checking queue.."\n  }\n}\n')),(0,r.kt)("h3",{id:"3-chain-sync-or-import-historical-data"},"3. Chain sync or import historical data"),(0,r.kt)("p",null,"A Mega node should be backfilled with the chain history so that the node has a complete database of all the coins since the blockchain started."),(0,r.kt)("p",null,"You can either:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/docs/userguides/recovery/chainresync"},"Chain resync")," the Mega node from an Archive node, or")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Import a MegaMMR ",(0,r.kt)("inlineCode",{parentName:"p"},".mmr")," file shared from another Mega node runner by running the following command from the Minima Terminal, RPC Client or Terminal MiniDapp. "))),(0,r.kt)("p",null,"Daily .mmr exports can be found ",(0,r.kt)("a",{parentName:"p",href:"https://spartacusrex.com/megaarchive/"},"here"),". "),(0,r.kt)("p",null,"The .mmr file must have been generated no longer than 1 week ago."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Mega MMR import")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"megammr action:import file:[PathToFile]/megammr.mmr\n")),(0,r.kt)("h2",{id:"additional-help"},"Additional help"),(0,r.kt)("p",null,"For additional information, you can use the Minima commands:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"help command:megammr")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"help command:megammrsync")))}h.isMDXComponent=!0}}]);